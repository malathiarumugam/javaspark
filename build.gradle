buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        maven { url "http://www.sparkjava.com/nexus/content/repositories/spark/" }
        jcenter()
    }
    dependencies {
        classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.2.3'
    }
}

version = '0.0.1'


apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'war'
apply plugin: 'tomcat'
apply plugin: 'eclipse-wtp'

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
    maven { url "http://www.sparkjava.com/nexus/content/repositories/spark/" }
}

dependencies {
    compile 'org.codehaus.groovy:groovy:2.3.2'
    compile 'org.apache.commons:commons-lang3:3.1'

    // spark framework and dependencies
    compile 'spark:spark:0.9.9.3-SNAPSHOT'
    compile 'org.slf4j:slf4j-log4j12:1.6.1'
    compile 'commons-io:commons-io:1.3.2'

    // other dependencies
    compile 'mysql:mysql-connector-java:5.1.13'
    compile 'javax.servlet:servlet-api:2.5'
    compile 'javax.servlet:jstl:1.1.2'
    compile 'org.apache.taglibs:taglibs-standard-jstlel:1.2.1'
//    compile 'javax.servlet:jsp-api:2.0'
//    compile ':standard::2.4'

    //compile 'com.google.guava:guava:13.0.1'
    compile 'com.squareup:dagger:0.9'
    //compile 'org.apache.httpcomponents:httpclient:4.2.1'

    testCompile 'junit:junit:4.10'

    // tomcat plugin
    def tomcatVersion = '7.0.11'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }
}

task createSourceDirs(description : 'Create empty source directories for all defined sourceSets') << {
    sourceSets*.allSource.srcDirs.flatten().each { File sourceDirectory ->
        if (!sourceDirectory.exists()) {
            println "Making $sourceDirectory"
            sourceDirectory.mkdirs()
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.2'
}

idea {
    project {
        jdkName = '1.7'
        ipr {
            withXml { provider ->
                provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git'
            }
        }
    }
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}


war {
    baseName = 'java-test-webapp'
}

task getHomeDir << {
    println gradle.gradleHomeDir
}

tomcatRunWar {
    httpPort = 8080
    stopPort = 8081
    //httpsPort = 8081
    //enableSSL = true
    //configFile = file('context.xml')
    contextPath = '/'
}

tomcatRun {
    httpPort = 8080
    stopPort = 8081
    contextPath = '/'
}
